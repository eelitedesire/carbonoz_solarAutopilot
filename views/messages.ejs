<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carbonoz SolarAutopilot</title>
 
</head>
<style>
:root {
    --primary-color: #DEAF0B;
    --bg-color: #f5f6fa;
    --text-color: #2f3640;
    --icon-color: #636e72;
}

body, html {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    height: 100%;
    background-color: var(--bg-color);
    
}

.container {
    display: flex;
    height: 100%;
}

.sidebar {
    width: 280px;
    background-color: white;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    transition: width 0.3s ease;
    z-index: 10;
}

.sidebar.collapsed {
    width: 80px;
}

.logo {
    display: flex;
    align-items: center;
    padding: 20px;
}

.logo-icon {
    width: 50px;
    height: 50px;
    background-color: var(--primary-color);
    border-radius: 8px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-weight: bold;
    font-size: 20px;
}

.logo-text {
    margin-left: 10px;
    font-weight: bold;
    color: var(--text-color);
    font-size: 18px;
}

.logo-text .highlight {
    color: red;
}

.search {
    padding: 10px 20px;
}

.search input {
    width: 100%;
    padding: 10px;
    border: 1px solid #dcdde1;
    border-radius: 4px;
    font-size: 16px;
}

nav {
    flex-grow: 1;
}

nav ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

nav li {
    padding: 15px 20px;
    display: flex;
    align-items: center;
    color: var(--text-color);
    cursor: pointer;
    transition: background-color 0.3s;
    font-size: 18px;
}
nav li a{
    text-decoration: none;
    color: #2f3640;
    font-weight: bold;
}
nav li:hover {
    background-color: var(--bg-color);
}

nav li i {
    margin-right: 15px;
    color: var(--icon-color);
    font-size: 24px;
}

.bottom-options {
    padding: 20px;
    border-top: 1px solid #dcdde1;
}

.toggle-sidebar {
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    font-size: 16px;
}

.toggle-text {
    margin-right: 10px;
}

.toggle-switch {
    width: 50px;
    height: 25px;
    background-color: #dcdde1;
    border-radius: 12.5px;
    position: relative;
    transition: background-color 0.3s;
}

.toggle-switch::before {
    content: '';
    position: absolute;
    width: 21px;
    height: 21px;
    border-radius: 50%;
    background-color: white;
    top: 2px;
    left: 2px;
    transition: transform 0.3s;
}

.toggle-switch.active {
    background-color: var(--primary-color);
}

.toggle-switch.active::before {
    transform: translateX(25px);
}

.sidebar.collapsed .logo-text,
.sidebar.collapsed .search,
.sidebar.collapsed nav li span,
.sidebar.collapsed .toggle-text {
    display: none;
}

.sidebar.collapsed .logo {
    justify-content: center;
}

.sidebar.collapsed nav li {
    justify-content: center;
}

.sidebar.collapsed nav li i {
    margin-right: 0;
}

.main-container {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

header {
    background-color: white;
    padding: 20px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    position: sticky;
    top: 0;
    z-index: 5;
}

.main-content {
    flex-grow: 1;
    padding: 20px;
    overflow-y: auto;
}

.content-card {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    padding: 20px;
    min-height: 100%;
}

footer {
    background-color: var(--primary-color);
    color: white;
    text-align: center;
    padding: 10px;
}

@media (max-width: 768px) {
    .container {
        flex-direction: column;
    }

    .sidebar {
        width: 100%;
        height: auto;
    }

    .sidebar.collapsed {
        width: 100%;
    }

    .main-container {
        width: 100%;
    }
}

/* loading css */

.loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f8f9fa;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
  }
  
  .loading-spinner {
    width: 50px;
    height: 50px;
    border: 5px solid #e0e0e0;
    border-top: 5px solid #3498db;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }



 


  
  
.controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }
  select {
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ddd;
    border-radius: 4px;
    background-color: white;
  }
  button {
    font-size: 16px;
    background-color: #DEAF0B;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s;
    color: #000;
  }
  
  #messageList {
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }
  .message {
    padding: 15px;
    border-bottom: 1px solid #eee;
    transition: background-color 0.3s;
  }
  .message:last-child {
    border-bottom: none;
  }
  .message:hover {
    background-color: #f9f9f9;
  }
  .topic {
    font-weight: 500;
    color: #2c3e50;
    margin-bottom: 5px;
  }
  .value {
    color: #7f8c8d;
  }
  @media (max-width: 600px) {
    .controls {
        flex-direction: column;
        align-items: stretch;
    }
    select, button {
        width: 100%;
        margin-bottom: 10px;
    }
  }
  
  
  .loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f8f9fa;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
  }
  
  .loading-spinner {
    width: 50px;
    height: 50px;
    border: 5px solid #e0e0e0;
    border-top: 5px solid #3498db;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  .logo-text {
    color: #000000; /* Black color for 'Carbonoz' */
    font-weight: bold;
}

.logo-text .highlight {
    color: #DEAF0B; /* Yellow color for 'SolarAutopilot' */
}

/* Dark mode styles */
body.dark-mode {
    background-color: #2f3640;
    color: #f5f6fa;
}

.dark-mode .sidebar {
    background-color: #2f3640;
}

.dark-mode .sidebar .logo-icon {
    background-color: #f5f6fa;
    color: #2f3640;
}

.dark-mode .sidebar .logo-text {
    color: #f5f6fa;
}

.dark-mode .sidebar nav li {
    color: #f5f6fa;
}

.dark-mode .sidebar nav li:hover {
    background-color: #353b48;
}

.dark-mode .sidebar nav li a {
    color: #f5f6fa;
}

.dark-mode .sidebar nav li i {
    color: #dcdde1;
}

.dark-mode .toggle-sidebar,
.dark-mode .toggle-dark-mode {
    color: #f5f6fa;
}

.dark-mode .toggle-switch {
    background-color: #353b48;
}

.dark-mode .toggle-switch.active {
    background-color: var(--primary-color);
}

.dark-mode header {
    background-color: #353b48;
}

.dark-mode .content-card {
    background-color: #353b48;
    color: #f5f6fa;
}

.dark-mode footer {
    background-color: #2f3640;
    color: #f5f6fa;
}

.dark-mode .loading-overlay{
    background-color: #353b48;
}

</style>
<body>
   
    <div class="container">
        <div id="loadingOverlay" class="loading-overlay">
            <div class="loading-spinner"></div>
          </div>
          <div id="pageContent"> </div>
        <div class="sidebar" id="sidebar">
            <div class="logo">
                <div class="logo-icon"><img src="https://carbonoz.com/assets/images/image04.jpg?v=8b5d1d9b" width="45px" alt=""></div>
                <span class="logo-text">Carbonoz <span class="highlight">SolarAutopilot</span></span>
            </div>
            <nav>
              <ul>
                <li><a href="<%= ingress_path %>/"><i>üè†</i><span>Dashboard</span></a></li>
                <li><a href="<%= ingress_path %>/dashboard"><i>‚ö°</i><span>Energy</span></a></li>
                <li><a href="<%= ingress_path %>/chart"><i>üìä</i><span>Charts</span></a></li>
                <li><a href="<%= ingress_path %>/messages"><i>üí¨</i><span>Messages</span></a></li>
                <li><a href="<%= ingress_path %>/settings"><i>‚öôÔ∏è</i><span>Settings</span></a></li>
                <li><a href="<%= ingress_path %>/analytics"><i>üìà</i><span>Analytics</span></a></li>
            </ul>
            </nav>
            <div class="bottom-options">
                <div class="toggle-dark-mode" id="toggleDarkMode">
                    <span class="toggle-text">Dark Mode</span>
                    <div class="toggle-switch" id="darkModeSwitch"></div>
                </div>
                <div class="toggle-sidebar" id="toggleSidebar">
                    <span class="toggle-text">Collapse sidebar</span>
                    <div class="toggle-switch" id="toggleSwitch"></div>
                </div>
            </div>
            
        </div>
       

        <div class="main-container">

            <div class="main-content">
                <div class="content-card">
                    <section>
                        <main>
                         
                            <h3>Incoming Messages</h3>
                            <div class="controls">
                                <select id="categoryFilter">
                                    <% categoryOptions.forEach(function(category) { %>
                                        <option value="<%= category %>"><%= category.charAt(0).toUpperCase() + category.slice(1).replace(/(\d+)$/, ' $1') %></option>
                                    <% }); %>
                                </select>
                                <button id="refreshButton">Refresh Messages</button>
                            </div>
                            <div id="messageList"></div>
                        </main>
                    </section>
                </div>
            </div>

        </div>
    </div>
     
    <script>
const messageList = document.getElementById('messageList');
const categoryFilter = document.getElementById('categoryFilter');
const refreshButton = document.getElementById('refreshButton');
const ingressPath = '<%= ingress_path %>';

function fetchMessages() {
    const category = categoryFilter.value;
    fetch(`${ingressPath}/api/messages?category=${category}`)
        .then(response => response.json())
        .then(messages => {
            messageList.innerHTML = '';
            messages.forEach(message => {
                const [topic, value] = message.split(': ');
                const messageElement = document.createElement('div');
                messageElement.className = 'message';
                messageElement.innerHTML = `
                    <div class="topic">${topic}</div>
                    <div class="value">${value}</div>
                `;
                messageList.appendChild(messageElement);
            });
        })
        .catch(error => console.error('Error fetching messages:', error));
}

categoryFilter.addEventListener('change', fetchMessages);
refreshButton.addEventListener('click', fetchMessages);

// Initial fetch
fetchMessages();
  </script>

<script>
  // toggle sidebar

const sidebar = document.getElementById('sidebar');
const toggleSidebar = document.getElementById('toggleSidebar');
const toggleSwitch = document.getElementById('toggleSwitch');

toggleSidebar.addEventListener('click', () => {
  sidebar.classList.toggle('collapsed');
  toggleSwitch.classList.toggle('active');
});


// loading js

document.addEventListener('DOMContentLoaded', function() {
  const loadingOverlay = document.getElementById('loadingOverlay');
  const pageContent = document.getElementById('pageContent');

  // Simulate loading time (you can adjust this as needed)
  setTimeout(() => {
    loadingOverlay.style.display = 'none';
    pageContent.style.display = 'block';
    // Trigger a custom event to signal that the page is ready
    document.dispatchEvent(new Event('pageReady'));
  }, 1500); // 1.5 seconds loading time
});
 </script>

 <script>
    // Toggle dark mode
const toggleDarkMode = document.getElementById('toggleDarkMode');
const darkModeSwitch = document.getElementById('darkModeSwitch');

toggleDarkMode.addEventListener('click', () => {
    document.body.classList.toggle('dark-mode');
    darkModeSwitch.classList.toggle('active');
    
    // Optional: Save the dark mode state in local storage
    if (document.body.classList.contains('dark-mode')) {
        localStorage.setItem('dark-mode', 'enabled');
    } else {
        localStorage.setItem('dark-mode', 'disabled');
    }
});

// Check the user's dark mode preference on page load
document.addEventListener('DOMContentLoaded', () => {
    if (localStorage.getItem('dark-mode') === 'enabled') {
        document.body.classList.add('dark-mode');
        darkModeSwitch.classList.add('active');
    }
});

 </script>
</body>
</html>